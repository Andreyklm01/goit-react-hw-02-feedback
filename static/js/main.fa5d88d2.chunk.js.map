{"version":3,"sources":["components/Statistic/Statistic.module.css","components/Feedback/FeedbackButton.module.css","components/Notification/Notification.module.css","components/Section/Section.module.css","components/Feedback/FeedbackButton.jsx","components/Options/options.js","components/Notification/Notification.jsx","components/Statistic/Statistic.jsx","components/Section/Section.jsx","App.jsx","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","s","feedback","map","option","button","type","value","onClick","Notification","message","Statistic","good","neutral","bad","total","percentage","container","text","Section","title","children","App","state","handleIncrement","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,KAAO,wBAAwB,MAAQ,+CAA+C,WAAa,6E,kBCA9JD,EAAOC,QAAU,CAAC,SAAW,iCAAiC,OAAS,iC,oBCAvED,EAAOC,QAAU,CAAC,QAAU,gC,gBCA5BD,EAAOC,QAAU,CAAC,MAAQ,yB,qKCuBXC,EArBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,qBAAKC,UAAWC,IAAEC,SAAlB,SACGJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,wBACEJ,UAAWC,IAAEI,OAEbC,KAAK,SACLC,MAAOH,EACPI,QAAST,EALX,SAOGK,GALIA,SCNEN,EAFC,CAAC,OAAQ,UAAW,O,gBCYrBW,EAVM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mCACE,oBAAIV,UAAWC,IAAES,QAAjB,SAA2BA,O,gBCuBhBC,EAvBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,WAA9B,OAChB,mCACID,EAGA,0BAASf,UAAWC,IAAEgB,UAAtB,UACE,oBAAGjB,UAAWC,IAAEiB,KAAhB,mBAA6BN,KAC7B,oBAAGZ,UAAWC,IAAEiB,KAAhB,sBAAgCL,KAChC,oBAAGb,UAAWC,IAAEiB,KAAhB,kBAA4BJ,KAC5B,oBAAGd,UAAWC,IAAEc,MAAhB,oBAA+BA,KAC/B,oBAAGf,UAAWC,IAAEe,WAAhB,gCAAgDA,EAAhD,UAPF,cAAC,EAAD,CAAcN,QAAQ,yB,iBCQbS,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,gCACE,oBAAIrB,UAAWC,IAAEmB,MAAjB,SAAyBA,IACxBC,MCsDUC,E,4MArDbC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,gBAAkB,YAAiB,IAC3BjB,EAD0B,EAAbkB,OACElB,MACrB,EAAKmB,UAAS,SAAAC,GACZ,OAAO,eAAGpB,EAAQoB,EAAUpB,GAAS,O,EAIzCqB,mBAAqB,WACnB,MAA+B,EAAKL,MACpC,OADA,EAAQX,KAAR,EAAcC,QAAd,EAAuBC,K,EAGzBe,gCAAkC,WAChC,IAAQjB,EAAS,EAAKW,MAAdX,KACFG,EAAQ,EAAKa,qBACnB,OAAOE,KAAKC,MAAOnB,EAAOG,EAAS,M,4CAGrC,WACE,MAA+BiB,KAAKT,MAA5BX,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQiB,KAAKJ,qBACbZ,EAAagB,KAAKH,kCAExB,OACE,sBAAK7B,UAAU,YAAf,UACE,cAAC,EAAD,CAASoB,MAAM,wBACf,cAAC,EAAD,CAASA,MAAM,wBAAf,SACE,cAAC,EAAD,CAEEtB,QAASA,EACTC,gBAAiBiC,KAAKR,iBAFjB1B,KAMT,cAAC,EAAD,CAASsB,MAAM,aAAf,SACE,cAAC,EAAD,CACER,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,WAAYA,a,GA9CNiB,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fa5d88d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Statistic_container__1og1P\",\"text\":\"Statistic_text__3Yy9e\",\"total\":\"Statistic_total__3yHff Statistic_text__3Yy9e\",\"percentage\":\"Statistic_percentage__mWEDk Statistic_total__3yHff Statistic_text__3Yy9e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"FeedbackButton_feedback__2EbPo\",\"button\":\"FeedbackButton_button__2CtXd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__SGOlI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__1ey5q\"};","import PropTypes from 'prop-types';\r\nimport s from './FeedbackButton.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <div className={s.feedback}>\r\n    {options.map(option => (\r\n      <button\r\n        className={s.button}\r\n        key={option}\r\n        type=\"button\"\r\n        value={option}\r\n        onClick={onLeaveFeedback}\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","const options = ['good', 'neutral', 'bad'];\r\n\r\nexport default options;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\nconst Notification = ({ message }) => (\r\n  <>\r\n    <h3 className={s.message}>{message}</h3>\r\n  </>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import PropTypes from 'prop-types';\r\nimport Notification from '../Notification/Notification';\r\nimport s from './Statistic.module.css';\r\n\r\nconst Statistic = ({ good, neutral, bad, total, percentage }) => (\r\n  <>\r\n    {!total ? (\r\n      <Notification message=\"No feedback given\" />\r\n    ) : (\r\n      <section className={s.container}>\r\n        <p className={s.text}>Good: {good}</p>\r\n        <p className={s.text}>Neutral: {neutral}</p>\r\n        <p className={s.text}>Bad: {bad}</p>\r\n        <p className={s.total}>Total: {total}</p>\r\n        <p className={s.percentage}>Positive feedback: {percentage}%</p>\r\n      </section>\r\n    )}\r\n  </>\r\n);\r\nStatistic.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  percentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistic;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div>\r\n    <h2 className={s.title}>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.element,\r\n};\r\n\r\nexport default Section;\r\n","import { Component } from 'react';\nimport FeedbackOptions from './components/Feedback/FeedbackButton';\nimport options from './components/Options/options';\nimport Statistic from './components/Statistic/Statistic';\nimport Section from './components/Section/Section';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = ({ target }) => {\n    const value = target.value;\n    this.setState(prevState => {\n      return { [value]: prevState[value] + 1 };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    return Math.round((good / total) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const percentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <div className=\"container\">\n        <Section title=\"EXPRESSO STATISTICS\" />\n        <Section title=\"Please Leave Feedback\">\n          <FeedbackOptions\n            key={options}\n            options={options}\n            onLeaveFeedback={this.handleIncrement}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          <Statistic\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            percentage={percentage}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}